// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "cpumem/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	GetCPUEndpoint        endpoint.Endpoint
	GetMEMEndpoint        endpoint.Endpoint
	GetNamespacesEndpoint endpoint.Endpoint
	GetPodsEndpoint       endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.CpumemService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetCPUEndpoint:        MakeGetCPUEndpoint(s),
		GetMEMEndpoint:        MakeGetMEMEndpoint(s),
		GetNamespacesEndpoint: MakeGetNamespacesEndpoint(s),
		GetPodsEndpoint:       MakeGetPodsEndpoint(s),
	}
	for _, m := range mdw["GetCPU"] {
		eps.GetCPUEndpoint = m(eps.GetCPUEndpoint)
	}
	for _, m := range mdw["GetMEM"] {
		eps.GetMEMEndpoint = m(eps.GetMEMEndpoint)
	}
	for _, m := range mdw["GetNamespaces"] {
		eps.GetNamespacesEndpoint = m(eps.GetNamespacesEndpoint)
	}
	for _, m := range mdw["GetPods"] {
		eps.GetPodsEndpoint = m(eps.GetPodsEndpoint)
	}
	return eps
}
